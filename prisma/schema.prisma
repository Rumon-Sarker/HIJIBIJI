generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:rumon@localhost:5432/hijibusy"
}

model User {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  role           Role      @default(SEMI_ADMIN)
  hashedPassword String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  sessions       Session[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
}

enum Role {
  SEMI_ADMIN
  ADMIN
  SUPER_ADMIN
}

// model Portfolio {
//   id          Int      @id @default(autoincrement())
//   name        String
//   category    String
//   description String
//   scope       String?
//   image       String
//   clientName  String?
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }
model PortfolioCategory {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  portfolios Portfolio[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Portfolio {
  id          Int               @id @default(autoincrement())
  name        String
  categoryId  Int
  category    PortfolioCategory @relation(fields: [categoryId], references: [id])
  link        String
  description String
  scope       String?
  image       String
  clientName  String?
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model BlogCategory {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  blogs     Blogs[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blogs {
  id          Int          @id @default(autoincrement())
  word1       String
  word2       String
  name        String
  categoryId  Int
  category    BlogCategory @relation(fields: [categoryId], references: [id])
  description String
  image       String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Services {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  scope       String?
  line1       String
  line2       String
  line3       String
  pdf         String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([name])
}

model Bg1 {
  id        Int      @id @default(autoincrement())
  title     String
  details   String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bg2 {
  id        Int      @id @default(autoincrement())
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Partners {
  id        Int      @id @default(autoincrement())
  link      String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Video {
  id        Int      @id @default(autoincrement())
  video     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HomeContact {
  id         Int      @id @default(autoincrement())
  firstname  String
  lastname   String
  email      String
  country    String
  interested String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model FooterContact {
  id        Int      @id @default(autoincrement())
  firstname String
  lastname  String
  email     String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id        Int      @id @default(autoincrement())
  firstname String
  lastname  String
  contact   String
  email     String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Job {
  id                Int         @id @default(autoincrement())
  jobTitle          String
  category          String
  departmentName    String
  location          String
  deadline          String
  vacancy           String
  jobResponsibility String
  slary             String
  applyForms        ApplyForm[] @relation("JobApplyForms")
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model ApplyForm {
  id          Int      @id @default(autoincrement())
  jobTitle    String
  firstname   String
  lastname    String
  gender      String
  date        String
  contact     String
  email       String
  address     String
  coverletter String
  image       String
  jobId       Int
  job         Job      @relation(fields: [jobId], references: [id], name: "JobApplyForms")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CaseStudy {
  id         Int    @id @default(autoincrement())
  word1      String
  word2      String
  word3      String
  name       String
  descripion String
}

model Experience {
  id        Int      @id @default(autoincrement())
  title     String
  details   String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AboutUs {
  id                   Int      @id @default(autoincrement())
  whoWeAre             String
  whyUs                String
  completedProject     String
  customerSatisfaction String
  raisedByClient       String
  years                String
  yearsInBusiness      String
  mission              String
  vision               String
  values               String
  ourTechnology        String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model Technology {
  id         Int                @id @default(autoincrement())
  categoryId Int
  category   TechnologyCategory @relation(fields: [categoryId], references: [id])
  name       String
  image      String
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
}

model TechnologyCategory {
  id           Int          @id @default(autoincrement())
  name         String       @unique
  technologies Technology[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model TechnologyName {
  id        Int      @id @default(autoincrement())
  name1     String
  name2     String
  name3     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FooterDescription {
  id               Int      @id @default(autoincrement())
  shortDescription String
  addressTitle1    String
  addressTitle2    String
  addressDetails1  String
  addressDetails2  String
  facebookLink     String
  twitterLink      String
  linkedinLink     String
  instagramLink    String
  youtubeLink      String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
